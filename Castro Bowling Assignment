package bowlingscores;

/*
This code calculates the score of a bowling game. It is able to handle rolls 
with fewer than 10 pins knocked down, rolls with no pins knocked down, and spares. 
The program does not properly calculate for a strike. It is not able to add the second 
bonus roll to the total score. 
*/
public class BowlingScores {

       
    BowlingScores(String input)
    {
        System.out.println(score(input));
    }
    
    private int score(String turnsInput)
    {
        int total = 0;
        int ballcount = 2; //determines when player's turn is complete
        int bonusrolls = 0; //iterates if player rolls a spare or a strike
        int thisframe = 0; //calculates for current frame's score
        
        for(int i = 0; i < turnsInput.length(); i++)
        {
            switch(turnsInput.charAt(i)){
                case '-':
                    ballcount--;
                    break;
                case 'X':
                    thisframe = 10;
                    bonusrolls = 3;
                    ballcount = 0;
                    break;
                case '/': 
                    thisframe = 10;
                    bonusrolls = 2;
                    ballcount = 0;
                    break;
                default:
                    thisframe = thisframe + Character.getNumericValue(turnsInput.charAt(i));
                    ballcount--;
                    break;
            }            
            if (ballcount == 0)
            {
                total = total + thisframe;
                thisframe = 0;
                ballcount = 2;
            }
            // This is where the error occurs within strikes because thisframe was cleared
            if (bonusrolls > 0)
            {
                total = total + thisframe;
                bonusrolls--;
            }
        }
        return total; 
    }
        
    public static void main(String[] args) {
        String userInput = "5-5-";
        BowlingScores test = new BowlingScores(userInput);
    }
    
}
